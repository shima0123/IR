 /**
   * 最大边缘相关(Maximal Marginal Relevance)，根据λ调节准确性和多样性
  * max[λ*score(i) - (1-λ)*max[similarity(i,j)]]:score(i)句子的得分，similarity(i,j)句子i与j的相似度
   * User-tunable diversity through λ parameter
   * - High λ= Higher accuracy
   * - Low λ= Higher diversity
 7 * @param sortedSentList 排好序的句子，编号及得分
 8  * @return
 9  */
 private Map<Integer,Double> MMR(List<Map.Entry<Integer, Double>> sortedSentList){
     //System.out.println("MMR In...");
    double[][] simSentArray=sentJSimilarity();//所有句子的相似度
    Map<Integer,Double> sortedLinkedSent=new LinkedHashMap<Integer,Double>();
    for(Map.Entry<Integer, Double> entry:sortedSentList){
15         sortedLinkedSent.put(entry.getKey(),entry.getValue());
16     }
17     Map<Integer,Double> MMR_SentScore=new LinkedHashMap<Integer,Double>();//最终的得分（句子编号与得分）
18     Map.Entry<Integer, Double> Entry=sortedSentList.get(0);//第一步先将最高分的句子加入
19     MMR_SentScore.put(Entry.getKey(), Entry.getValue());
20     boolean flag=true;
21     while(flag){
22         int index=0;
23         double maxScore=Double.NEGATIVE_INFINITY;//通过迭代计算获得最高分句子
24         for(Map.Entry<Integer, Double> entry:sortedLinkedSent.entrySet()){
25             if(MMR_SentScore.containsKey(entry.getKey())) continue;
26             double simSentence=0.0;
27             for(Map.Entry<Integer, Double> MMREntry:MMR_SentScore.entrySet()){//这个是获得最相似的那个句子的最大相似值
28                 double simSen=0.0;
29                 if(entry.getKey()>MMREntry.getKey())
30                     simSen=simSentArray[MMREntry.getKey()][entry.getKey()];
31                 else
32                     simSen=simSentArray[entry.getKey()][MMREntry.getKey()];
33                 if(simSen>simSentence){
34                     simSentence=simSen;
35                 }
36             }
37             simSentence=λ*entry.getValue()-(1-λ)*simSentence;
38             if(simSentence>maxScore){
39                 maxScore=simSentence;
40                 index=entry.getKey();//句子编号
41             }
42         }
43         MMR_SentScore.put(index, maxScore);
44         if(MMR_SentScore.size()==sortedLinkedSent.size())
45             flag=false;
46     }
47     return MMR_SentScore;
48 }
